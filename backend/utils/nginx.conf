#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    # include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    upstream fastapi_backend {
        hash $remote_addr consistent; # Enable session persistence based on client IP on the same instance
        server 127.0.0.1:8000; # First instance
        server 127.0.0.1:8001; # Second instance
    }

    #gzip  on;
    server {
        listen 80;
        server_name yourdomain.com;  # Replace with your domain or IP

        # Configure SSL if needed
        # listen 443 ssl;
        # ssl_certificate /path/to/cert.pem;
        # ssl_certificate_key /path/to/key.pem;

        location / {
            proxy_pass http://fastapi_backend;

            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            proxy_set_header Host $host;

            # enable WebSockets
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;  # Allow localhost
            deny all; # Deny all others
        }

        # Optional: Serve static files
        location /static/ {
            root /path/to/static/files;  # Adjust the path
        }

        # Optional: Add caching for static files
        location ~* \.(jpg|jpeg|png|gif|css|js|ico|svg|woff|woff2|ttf|otf|eot|ttf|otf|html)$ {
            expires 30d;
            access_log off;
        }
    }
    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}
    include servers/*;
}
