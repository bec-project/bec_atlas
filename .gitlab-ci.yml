image: $CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX/python:3.11

variables:
  SCYLLA_HOST: scylla
  SCYLLA_PORT: 9042
  SCYLLA_KEYSPACE: bec_atlas

workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
    - if: '$CI_PIPELINE_SOURCE == "web"'
    - if: '$CI_PIPELINE_SOURCE == "pipeline"'
    - if: '$CI_PIPELINE_SOURCE == "parent_pipeline"'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_COMMIT_BRANCH
  auto_cancel:
    on_new_commit: interruptible

stages:
  - Formatter
  - test 
  - Deploy

include:
  - template: Security/Secret-Detection.gitlab-ci.yml

formatter:
  stage: Formatter
  needs: []
  script:
    - pip install black isort
    - isort --check --diff --line-length=100 --profile=black --multi-line=3 --trailing-comma ./backend/bec_atlas
    - black --check --diff --color --line-length=100 --skip-magic-trailing-comma ./backend/bec_atlas
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
    - if: '$CI_PIPELINE_SOURCE == "web"'
    - if: '$CI_PIPELINE_SOURCE == "pipeline"'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'  
    - if: '$CI_PIPELINE_SOURCE == "parent_pipeline"'
      when: never
    - if: $CI_COMMIT_BRANCH
  interruptible: true

pylint:
  stage: Formatter
  needs: []
  script:
    - pip install pylint pylint-exit anybadge
    - mkdir ./pylint
    - pylint ./backend/bec_atlas --output-format=text | tee ./pylint/pylint.log || pylint-exit $?
    - PYLINT_SCORE=$(sed -n 's/^Your code has been rated at \([-0-9.]*\)\/.*/\1/p' ./pylint/pylint.log)
    - anybadge --label=Pylint --file=pylint/pylint.svg --value=$PYLINT_SCORE 2=red 4=orange 8=yellow 10=green
    - echo "Pylint score is $PYLINT_SCORE"
  artifacts:
    paths:
      - ./pylint/
    expire_in: 1 week
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
    - if: '$CI_PIPELINE_SOURCE == "web"'
    - if: '$CI_PIPELINE_SOURCE == "pipeline"'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'  
    - if: '$CI_PIPELINE_SOURCE == "parent_pipeline"'
      when: never
    - if: $CI_COMMIT_BRANCH
  interruptible: true

backend_pytest:
  services:
    - name: $CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX/scylladb/scylla:latest
      alias: scylla
    - name: $CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX/redis:latest
      alias: redis
      command: ["redis-server", "--port", "6380"]
  stage: test
  needs: []
  script:
    - pip install ./backend[dev]
    - pip install coverage pytest-asyncio
    - coverage run --concurrency=thread --source=./backend --omit=*/backend/tests/* -m pytest -v --junitxml=report.xml --skip-docker --random-order --full-trace ./backend/tests
    - coverage report
    - coverage xml
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    reports:
      junit: report.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
  interruptible: true

semver:
  stage: Deploy
  needs: ["backend_pytest"]
  script:
    - git config --global user.name "ci_update_bot"
    - git config --global user.email "ci_update_bot@bec.ch"
    - git checkout "$CI_COMMIT_REF_NAME"
    - git reset --hard origin/"$CI_COMMIT_REF_NAME"

    # delete all local tags
    - git tag -l | xargs git tag -d
    - git fetch --tags
    - git tag

    # build and publish package
    - pip install python-semantic-release==9.* wheel build twine
    - export GL_TOKEN=$CI_UPDATES
    - semantic-release -vv version

    # check if any artifacts were created
    - if [ ! -d dist ]; then echo No release will be made; exit 0; fi
    # - twine upload dist/* -u __token__ -p $CI_PYPI_TOKEN --skip-existing
    - semantic-release publish


  allow_failure: false
  rules:
    - if: '$CI_COMMIT_REF_NAME == "main" && $CI_PROJECT_PATH == "bec/bec_atlas"'
  interruptible: true